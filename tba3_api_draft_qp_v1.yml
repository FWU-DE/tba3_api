openapi: 3.1.0
info:
  title: API für Lernstandserhebungen
  version: '0.0.2'
  description: |
    API für prototypische Rückmeldungen von Lernstandserhebungen:
    Zurückgemeldet werden Verteilungen von Kompetenzstufen und Lösungsquoten
    auf verschiedenen Ebenen: Kurs, Schüler, Schule mit verschiedenen
    Aggregationen und Vergleichsdatensätzen.
  contact:
    name: Tech Support
    email: support@fwu.de
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://api.tba3.de/v1
    description: Dev-Umgebung
  - url: https://api-dev.tba3.de/v1
    description: Development Server

tags:
  - name: courses
    description: Ergebnisse auf Kursebene
  - name: students
    description: Ergebnisse auf Schülerebene
  - name: schools
    description: Ergebnisse auf Schulebene

paths:
  /courses/{courseId}/statistics:
    get:
      tags:
        - courses
      summary: Kursstatistiken abrufen
      description: Verschiedene Leistungsmessungen für einen Kurs mit Aggregationsoptionen abrufen
      operationId: getCourseStatistics
      parameters:
        - $ref: '#/components/parameters/CourseId'
        - name: metric
          in: query
          required: true
          schema:
            type: string
            enum:
              - competence-levels
              - solution-frequencies
              - task-performance
          description: Art der abzurufenden Messung
        - name: groupBy
          in: query
          schema:
            type: string
            enum:
              - students
              - competences
              - tasks
            default: students
          description: Gruppierung der Ergebnisse
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Statistiken erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
              examples:
                competence-levels:
                  summary: Kompetenzstufenverteilung
                  value:
                    data:
                      - competenceLevelId: 1
                        competenceLevelCode: "A1"
                        studentCount: 15
                        percentage: 0.3
                    meta:
                      total: 50
                      page: 1
                      limit: 20
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /courses/{courseId}/students:
    get:
      tags:
        - students
      summary: Schülerleistungsdaten für einen Kurs abrufen
      description: Individuelle Schülerleistungsmessungen innerhalb eines Kurses abrufen
      operationId: getCourseStudents
      parameters:
        - $ref: '#/components/parameters/CourseId'
        - name: metric
          in: query
          required: true
          schema:
            type: string
            enum:
              - competence-levels
              - solution-frequencies
              - task-performance
        - name: competenceId
          in: query
          schema:
            type: integer
            format: int64
          description: Nach bestimmter Kompetenz filtern
        - name: taskId
          in: query
          schema:
            type: integer
            format: int64
          description: Nach bestimmter Aufgabe filtern
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Schülerdaten erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPerformanceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /schools/{schoolId}/runs/{runId}/statistics:
    get:
      tags:
        - schools
      summary: Schulstatistiken für eine Durchführung abrufen
      description: Aggregierte Leistungsstatistiken für eine Schule in einer bestimmten Durchführung abrufen
      operationId: getSchoolRunStatistics
      parameters:
        - $ref: '#/components/parameters/SchoolId'
        - $ref: '#/components/parameters/RunId'
        - name: metric
          in: query
          required: true
          schema:
            type: string
            enum:
              - competence-levels
              - course-comparison
          description: Art der abzurufenden Messung
        - name: includeComparison
          in: query
          schema:
            type: boolean
            default: false
          description: Vergleichsdaten mit ähnlichen Schulen einschließen
        - name: subjectId
          in: query
          schema:
            type: integer
            format: int64
          description: Nach bestimmtem Fach filtern
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Schulstatistiken erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolStatisticsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /schools/{schoolId}/runs/{runId}/courses:
    get:
      tags:
        - schools
      summary: Kursaufschlüsselung für Schuldurchführung abrufen
      description: Leistungsstatistiken aufgeschlüsselt nach einzelnen Kursen innerhalb einer Schuldurchführung abrufen
      operationId: getSchoolRunCourses
      parameters:
        - $ref: '#/components/parameters/SchoolId'
        - $ref: '#/components/parameters/RunId'
        - name: metric
          in: query
          required: true
          schema:
            type: string
            enum:
              - competence-levels
          description: Type of metric to retrieve
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Kursaufschlüsselung erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesStatisticsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    CourseId:
      name: courseId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
      description: Eindeutige Kennung für den Kurs
    
    SchoolId:
      name: schoolId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
      description: Eindeutige Kennung für die Schule
    
    RunId:
      name: runId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
      description: Eindeutige Kennung für die Durchführung (z.B. VERA3 2024, VERA8 2024)
    
    Limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: Maximale Anzahl der zurückzugebenden Ergebnisse
    
    Offset:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0
      description: Anzahl der zu überspringenden Ergebnisse für Paginierung

  schemas:
    # Response Wrappers
    StatisticsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/CompetenceLevelStatistic'
              - $ref: '#/components/schemas/SolutionFrequencyStatistic'
              - $ref: '#/components/schemas/TaskPerformanceStatistic'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      required: [data, meta]

    StudentPerformanceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/StudentPerformance'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      required: [data, meta]

    SchoolStatisticsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SchoolStatistics'
        comparison:
          $ref: '#/components/schemas/ComparisonData'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      required: [data, meta]

    CoursesStatisticsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CourseStatistics'
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      required: [data, meta]

    ResponseMeta:
      type: object
      properties:
        total:
          type: integer
          description: Gesamtanzahl verfügbarer Ergebnisse
        page:
          type: integer
          description: Aktuelle Seitennummer
        limit:
          type: integer
          description: Ergebnisse pro Seite
        hasNext:
          type: boolean
          description: Ob weitere Ergebnisse verfügbar sind
      required: [total, page, limit, hasNext]

    # Core Data Models
    CompetenceLevelStatistic:
      type: object
      properties:
        competenceLevelId:
          type: integer
          format: int64
        competenceLevelCode:
          type: string
        competenceLevelTitle:
          type: string
        studentCount:
          type: integer
          minimum: 0
          description: Zahl der Schüler mit dieser Kompetenzstufe
        percentage:
          type: number
          format: float
          minimum: 0
          maximum: 1
        classification:
          type: string
          enum:
            - "unter Mindeststandard"
            - "Mindeststandard" 
            - "Regelstandard"
            - "Regelstandard plus"
            - "Optimalstandard"
          description: Klasse der Kompetenzstufe
      required: [competenceLevelId, competenceLevelCode, studentCount, percentage]

    SolutionFrequencyStatistic:
      type: object
      properties:
        competenceId:
          type: integer
          format: int64
        competenceCode:
          type: string
        competenceName:
          type: string
        averageRatio:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Durchschnittliche Lösungshäufigkeit von Items, die dieser Kompetenz zugeordnet sind
        studentCount:
          type: integer
          minimum: 0
          description: Anzahl der Schüler
      required: [competenceId, competenceCode, averageRatio, studentCount]

    TaskPerformanceStatistic:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        taskName:
          type: string
        taskPosition:
          type: integer
          description: Position der Aufgabe innerhalb des Testhefts
        averageRatio:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Durchschnittliche Lösungshäufigkeit aller Items dieser Aufgabe
        studentCount:
          type: integer
          minimum: 0
          description: Anzahl der Schüler
      required: [taskId, taskName, averageRatio, studentCount]

    StudentPerformance:
      type: object
      properties:
        studentId:
          type: integer
          format: int64
        vidisId:
          type: string
        studentName:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        germanIsDominantLanguage:
          type: boolean
        specialEducationNeeds:
          type: boolean
        competenceLevel:
          $ref: '#/components/schemas/CompetenceLevel'
        performance:
          oneOf:
            - $ref: '#/components/schemas/CompetencePerformance'
            - $ref: '#/components/schemas/TaskPerformance'
      required: [studentId, studentName, gender]

    SchoolStatistics:
      type: object
      properties:
        schoolId:
          type: integer
          format: int64
        runId:
          type: integer
          format: int64
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/SubjectStatistics'
      required: [schoolId, runId, subjects]

    SubjectStatistics:
      type: object
      properties:
        subjectId:
          type: integer
          format: int64
        subjectName:
          type: string
          description: Name des Fachs
        competenceLevels:
          type: array
          items:
            $ref: '#/components/schemas/CompetenceLevelStatistic'
      required: [subjectId, subjectName, competenceLevels]

    CourseStatistics:
      type: object
      properties:
        courseId:
          type: integer
          format: int64
        courseName:
          type: string
          description: Name des Kurses
        subjectId:
          type: integer
          format: int64
        subjectName:
          type: string
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/CompetenceLevelStatistic'
      required: [courseId, courseName, subjectId, subjectName, statistics]

    ComparisonData:
      type: object
      properties:
        clusterType:
          type: string
        similarSchools:
          type: array
          items:
            $ref: '#/components/schemas/SubjectStatistics'
      required: [clusterType, similarSchools]

    # Supporting Models
    Student:
      type: object
      properties:
        studentId:
          type: integer
          format: int64
        vidisId:
          type: string
        studentName:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        germanIsDominantLanguage:
          type: boolean
        specialEducationNeeds:
          type: boolean
        halfYearGrades:
          type: array
          items:
            $ref: '#/components/schemas/HalfYearGrade'
          description: Letzte Halbjahresnoten des Schülers
      required: [studentId, studentName, gender]

    Gender:
      type: string
      enum: [m, f, d]
      description: Geschlecht des Schülers [männlich, weiblich, divers]

    HalfYearGrade:
      type: object
      properties:
        subjectId:
          type: integer
          format: int64
        subjectName:
          type: string
          description: Name des Fachs
        grade:
          type: integer
          minimum: 1
          maximum: 6
          description: Letzte Halbjahresnote des Schülers im Fach
      required: [subjectId, subjectName, grade]

    Course:
      type: object
      properties:
        courseId:
          type: integer
          format: int64
        courseName:
          type: string
      required: [courseId, courseName]

    Task:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        taskName:
          type: string
          description: Name der Aufgabe
        taskPosition:
          type: integer
          minimum: 1
          description: Position der Aufgabe innerhalb des Testhefts
      required: [taskId, taskName, taskPosition]

    Subject:
      type: object
      properties:
        subjectId:
          type: integer
          format: int64
        subjectName:
          type: string
      required: [subjectId, subjectName]

    CompetenceLevel:
      type: object
      properties:
        competenceLevelId:
          type: integer
          format: int64
        competenceLevelTitle:
          type: string
          description: Langer Name der Kompetenzstufe
        competenceLevelCode:
          type: string
          description: Kurzname der Kompetenzstufe
        competenceLevelPosition:
          type: integer
          minimum: 1
          description: Position der Kompetenzstufe innerhalb der Skala
        description:
          type: string
          description: Erläuterung der Kompetenzstufe gemäß der BiSta
        descriptionEasy:
          type: string
          description: Kurze und einfache Erläuterung der Kompetenzstufe
        classification:
          type: string
          enum:
            - "unter Mindeststandard"
            - "Mindeststandard"
            - "Regelstandard"
            - "Regelstandard plus"
            - "Optimalstandard"
        subject:
          $ref: '#/components/schemas/Subject'
      required: [competenceLevelId, competenceLevelCode, competenceLevelPosition]

    Competence:
      type: object
      properties:
        competenceId:
          type: integer
          format: int64
        competenceName:
          type: string
          description: Titel / Name der Kompetenz gemäß der BiSta
        competenceCode:
          type: string
          description: Alphanumerisches Kürzel der Kompetenz gemäß der BiSta
        competencePosition:
          type: integer
          minimum: 1
          description: Position der Kompetenz innerhalb des Teilbaumes
        competenceType:
          $ref: '#/components/schemas/CompetenceType'
        subject:
          $ref: '#/components/schemas/Subject'
      required: [competenceId, competenceName, competenceCode]

    CompetenceType:
      type: object
      properties:
        competenceTypeId:
          type: integer
          format: int64
        competenceTypeName:
          type: string
          description: Art der Kompetenz
      required: [competenceTypeId, competenceTypeName]

    CompetencePerformance:
      type: object
      properties:
        competenceId:
          type: integer
          format: int64
        averageRatio:
          type: number
          format: float
          minimum: 0
          maximum: 1
      required: [competenceId, averageRatio]

    TaskPerformance:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        solvedQuestionRatio:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Lösungshäufigkeit aller Items dieser Aufgabe
      required: [taskId, solvedQuestionRatio]

    # Error Models
    Error:
      type: object
      properties:
        code:
          type: string
          description: Fehlercode für programmatische Behandlung
        message:
          type: string
          description: Menschenlesbare Fehlermeldung
        details:
          type: object
          description: Zusätzliche Fehlerdetails
      required: [code, message]

  responses:
    BadRequest:
      description: Ungültige Anfrageparameter
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "INVALID_PARAMETER"
            message: "Der Parameter 'metric' ist erforderlich"

    Forbidden:
      description: Zugriff verweigert - unzureichende Berechtigungen
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "ACCESS_DENIED"
            message: "Sie haben keine Berechtigung für den Zugriff auf diese Ressource"

    NotFound:
      description: Ressource nicht gefunden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "RESOURCE_NOT_FOUND"
            message: "Kurs mit ID 12345 nicht gefunden"

    InternalError:
      description: Interner Serverfehler
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "INTERNAL_ERROR"
            message: "Ein unerwarteter Fehler ist aufgetreten"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
